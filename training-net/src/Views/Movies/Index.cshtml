@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@using MvcMovies.PaginatedList
@using MvcMovie.Models.Views
@model MvcMovie.Models.View.MovieGenreViewModel

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["HomePage"];
    ViewData["Create"] = Localizer["Create"];
    ViewData["PageTitle"] = Localizer["PageTitle"];
    ViewData["Edit"] = Localizer["Edit"];
    ViewData["Details"] = Localizer["Details"];
    ViewData["Delete"] = Localizer["Delete"];
    ViewData["MovieTitle"] = Localizer["MovieTitle"];
    ViewData["Filter"] = Localizer["Filter"];
}


<h2>@ViewData["PageTitle"]</h2>

<p >
    <a asp-action="Create"> @ViewData["Create"] </a>
</p>
<form asp-controller="Movies" asp-action="Index" method="GET">
    <p>
        @Html.DropDownList("movieGenre",Model.genres, "Genre")
        @ViewData["MovieTitle"] <input type="text" name="SearchString">
        <input type="submit" value= @ViewData["Filter"] />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-page="@(Model.MovieList.PageIndex)">@Html.DisplayNameFor(model => model.movies[0].Title)</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-page="@(Model.MovieList.PageIndex)">@Html.DisplayNameFor(model => model.movies[0].ReleaseDate)</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["GenreSortParm"]" asp-route-page="@(Model.MovieList.PageIndex)">@Html.DisplayNameFor(model => model.movies[0].Genre)</a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.movies[0].Price)
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.MovieList) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">@ViewData["Edit"]</a> |
                <a asp-action="Details" asp-route-id="@item.ID">@ViewData["Details"]</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">@ViewData["Delete"]</a> |
                <a asp-action="Mail" asp-route-id="@item.ID">Email</a>
            </td>
        </tr>
}
@{
    var prevDisabled = !Model.MovieList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.MovieList.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-movieGenre="@ViewData["CurrentFilter"]"
   asp-route-page="@(Model.MovieList.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-movieGenre="@ViewData["CurrentFilter"]"
   asp-route-page="@(Model.MovieList.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
    </tbody>
</table>